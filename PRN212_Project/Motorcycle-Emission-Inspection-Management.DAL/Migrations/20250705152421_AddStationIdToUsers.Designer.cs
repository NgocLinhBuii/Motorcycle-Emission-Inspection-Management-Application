// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Motorcycle_Emission_Inspection_Management.DAL;

#nullable disable

namespace Motorcycle_Emission_Inspection_Management.DAL.Migrations
{
    [DbContext(typeof(EmissionInspectionContext))]
    [Migration("20250705152421_AddStationIdToUsers")]
    partial class AddStationIdToUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.InspectionRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<decimal>("Co2emission")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("CO2Emission");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Hcemission")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("HCEmission");

                    b.Property<DateTime?>("InspectionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("InspectorId")
                        .HasColumnType("int")
                        .HasColumnName("InspectorID");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int")
                        .HasColumnName("VehicleID");

                    b.HasKey("RecordId")
                        .HasName("PK__Inspecti__FBDF78C963B0E4D1");

                    b.HasIndex("InspectorId");

                    b.HasIndex("StationId");

                    b.HasIndex("VehicleId");

                    b.ToTable("InspectionRecords");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.InspectionStation", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("StationId")
                        .HasName("PK__Inspecti__E0D8A6DDC27EE544");

                    b.HasIndex(new[] { "Email" }, "UQ__Inspecti__A9D1053425C21967")
                        .IsUnique();

                    b.ToTable("InspectionStations");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("LogId")
                        .HasName("PK__Logs__5E5499A8A2D54559");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E32DCADD5D4");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3AD4ABCC8D");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B61600BFB1C28")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int?>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC28DFCA6E");

                    b.HasIndex("RoleId");

                    b.HasIndex("StationId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053479E04A87")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VehicleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EngineNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ManufactureYear")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("OwnerID");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("VehicleId")
                        .HasName("PK__Vehicles__476B54B208C9B7AE");

                    b.HasIndex("OwnerId");

                    b.HasIndex(new[] { "PlateNumber" }, "UQ__Vehicles__03692624E12F495B")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.InspectionRecord", b =>
                {
                    b.HasOne("Motorcycle_Emission_Inspection_Management.DAL.Entities.User", "Inspector")
                        .WithMany("InspectionRecords")
                        .HasForeignKey("InspectorId")
                        .IsRequired()
                        .HasConstraintName("FK_Records_Inspector");

                    b.HasOne("Motorcycle_Emission_Inspection_Management.DAL.Entities.InspectionStation", "Station")
                        .WithMany("InspectionRecords")
                        .HasForeignKey("StationId")
                        .IsRequired()
                        .HasConstraintName("FK_Records_Station");

                    b.HasOne("Motorcycle_Emission_Inspection_Management.DAL.Entities.Vehicle", "Vehicle")
                        .WithMany("InspectionRecords")
                        .HasForeignKey("VehicleId")
                        .IsRequired()
                        .HasConstraintName("FK_Records_Vehicle");

                    b.Navigation("Inspector");

                    b.Navigation("Station");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.Log", b =>
                {
                    b.HasOne("Motorcycle_Emission_Inspection_Management.DAL.Entities.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Logs_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.Notification", b =>
                {
                    b.HasOne("Motorcycle_Emission_Inspection_Management.DAL.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Notifications_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.User", b =>
                {
                    b.HasOne("Motorcycle_Emission_Inspection_Management.DAL.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Users_RoleID");

                    b.HasOne("Motorcycle_Emission_Inspection_Management.DAL.Entities.InspectionStation", "Station")
                        .WithMany("Users")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Users_StationID");

                    b.Navigation("Role");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.Vehicle", b =>
                {
                    b.HasOne("Motorcycle_Emission_Inspection_Management.DAL.Entities.User", "Owner")
                        .WithMany("Vehicles")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK_Vehicles_OwnerID");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.InspectionStation", b =>
                {
                    b.Navigation("InspectionRecords");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.User", b =>
                {
                    b.Navigation("InspectionRecords");

                    b.Navigation("Logs");

                    b.Navigation("Notifications");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Motorcycle_Emission_Inspection_Management.DAL.Entities.Vehicle", b =>
                {
                    b.Navigation("InspectionRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
